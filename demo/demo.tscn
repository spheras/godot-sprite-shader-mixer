[gd_scene load_steps=27 format=3 uid="uid://btvorthsuc7d1"]

[ext_resource type="Texture2D" uid="uid://df3ytg0qn46tl" path="res://demo/assets/supergodot/supergodot-0001.png" id="2_e06wh"]
[ext_resource type="Texture2D" uid="uid://bwsh5ic42ptu0" path="res://demo/assets/supergodot/supergodot-0002.png" id="3_2mmwv"]
[ext_resource type="Texture2D" uid="uid://c07t2gtcgivu3" path="res://demo/assets/supergodot/supergodot-0000.png" id="3_t3lb8"]
[ext_resource type="Texture2D" uid="uid://c71u2dch58md2" path="res://demo/assets/supergodot/supergodot-0003.png" id="4_cc5mr"]
[ext_resource type="Texture2D" uid="uid://d1ig54udlb1xy" path="res://demo/assets/supergodot/supergodot-0004.png" id="5_y64ey"]
[ext_resource type="Texture2D" uid="uid://hxrxd7sc6vt2" path="res://demo/assets/supergodot/supergodot-0005.png" id="6_vu1iv"]
[ext_resource type="Texture2D" uid="uid://dbd2ppfmye2vc" path="res://demo/assets/supergodot/supergodot-0006.png" id="7_p2sjx"]
[ext_resource type="Texture2D" uid="uid://ct0uynnpl6w3n" path="res://demo/assets/supergodot/supergodot-0007.png" id="8_8slbi"]
[ext_resource type="Texture2D" uid="uid://bqxjdlhxgfruy" path="res://demo/assets/supergodot/supergodot-0008.png" id="9_ueai0"]
[ext_resource type="Texture2D" uid="uid://dwqt7vn0sdpgq" path="res://demo/assets/supergodot/supergodot-0009.png" id="10_temj0"]
[ext_resource type="Texture2D" uid="uid://ckfo4xndw32q1" path="res://demo/assets/supergodot/supergodot-0010.png" id="11_gwae1"]
[ext_resource type="Texture2D" uid="uid://dyqlp0ddwvqrf" path="res://demo/assets/supergodot/supergodot-0011.png" id="12_mn5fg"]
[ext_resource type="Texture2D" uid="uid://hyalqq3u0ox4" path="res://demo/assets/supergodot/supergodot-0012.png" id="13_5jmwu"]
[ext_resource type="Texture2D" uid="uid://p24ueaupc2sx" path="res://demo/assets/supergodot/supergodot-0013.png" id="14_pvbc4"]
[ext_resource type="Texture2D" uid="uid://dslkly12nx7kp" path="res://demo/assets/supergodot/supergodot-0014.png" id="15_vorph"]
[ext_resource type="Texture2D" uid="uid://bbxv86hom4lcw" path="res://demo/assets/supergodot/supergodot-0015.png" id="16_b7r4p"]
[ext_resource type="Texture2D" uid="uid://bi5u1xm7pr2ma" path="res://demo/assets/supergodot/supergodot-0016.png" id="17_h4rrq"]
[ext_resource type="Texture2D" uid="uid://lgt4s5glokxo" path="res://demo/assets/supergodot/supergodot-0017.png" id="18_qsqos"]
[ext_resource type="Texture2D" uid="uid://d2h57p4ntjlwp" path="res://demo/assets/supergodot/supergodot-0018.png" id="19_jqinh"]
[ext_resource type="Texture2D" uid="uid://jstb3t5fl3k8" path="res://demo/assets/supergodot/supergodot-0019.png" id="20_jykhe"]
[ext_resource type="Texture2D" uid="uid://dg1bar8amfygq" path="res://demo/assets/godot-text.png" id="21_0xoix"]

[sub_resource type="Shader" id="Shader_qlsqf"]
code = "//ATTENTION:
//  THIS IS SHADE AUTOGENERATED BY
//  THE ADDON SPRITE-SHADER-MIXER
//  ANY MANUAL CHANGES WILL BE REMOVED WHEN THE ADDON
//  UPDATES THIS SHADER.
//  ANYWAY, YOU CAN SAVE THE CURRENT VERSION AS A RESOURCE FILE.
//SHADERS:
shader_type canvas_item;

	

void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 size = vec2(textureSize(TEXTURE, 0));



	COLOR=color;
}

void vertex() {
	
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_st2lq"]
shader = SubResource("Shader_qlsqf")

[sub_resource type="Shader" id="Shader_iq3bx"]
code = "//ATTENTION:
//  THIS IS SHADE AUTOGENERATED BY
//  THE ADDON SPRITE-SHADER-MIXER
//  ANY MANUAL CHANGES WILL BE REMOVED WHEN THE ADDON
//  UPDATES THIS SHADER.
//  ANYWAY, YOU CAN SAVE THE CURRENT VERSION AS A RESOURCE FILE.
//SHADERS:Pseudo3D,Greyscale,
shader_type canvas_item;

	

// Camera FOV.,- - <MM
uniform bool PSEUDO3D_active = true;
uniform float PSEUDO3D_fov : hint_range(1, 179) = 90;
uniform float PSEUDO3D_y_rot : hint_range(-180, 180) = 0.0;
uniform float PSEUDO3D_x_rot : hint_range(-180, 180) = 0.0;
// At 0, the image retains its size when unrotated.
// At 1, the image is resized so that it can do a full
// rotation without clipping inside its rect.
uniform float PSEUDO3D_inset : hint_range(0, 1) = 0.0;
// Consider changing this to a uniform and changing it from code
varying flat vec2 PSEUDO3D_o;
varying vec3 PSEUDO3D_p;
// Creates rotation matrix
void pseudo3d_vertex(in vec2 uv, inout vec3 p, inout vec2 o, inout vec2 vertex, vec2 pixelSize){
	float sin_b = sin(PSEUDO3D_y_rot / 180.0 * PI);
	float cos_b = cos(PSEUDO3D_y_rot / 180.0 * PI);
	float sin_c = sin(PSEUDO3D_x_rot / 180.0 * PI);
	float cos_c = cos(PSEUDO3D_x_rot / 180.0 * PI);
	
	mat3 inv_rot_mat;
	inv_rot_mat[0][0] = cos_b;
	inv_rot_mat[0][1] = 0.0;
	inv_rot_mat[0][2] = -sin_b;
	
	inv_rot_mat[1][0] = sin_b * sin_c;
	inv_rot_mat[1][1] = cos_c;
	inv_rot_mat[1][2] = cos_b * sin_c;
	
	inv_rot_mat[2][0] = sin_b * cos_c;
	inv_rot_mat[2][1] = -sin_c;
	inv_rot_mat[2][2] = cos_b * cos_c;
	
	
	float t = tan(PSEUDO3D_fov / 360.0 * PI);
	p = inv_rot_mat * vec3((uv - 0.5), 0.5 / t);
	float v = (0.5 / t) + 0.5;
	p.xy *= v * inv_rot_mat[2].z;
	o = v * inv_rot_mat[2].xy;

	vertex += (uv - 0.5) / pixelSize * t * (1.0 - PSEUDO3D_inset);
}
void pseudo3d(in vec2 uv, in sampler2D txt, vec2 size, vec2 pixelSize, inout vec4 color) {
		vec2 newUV = (PSEUDO3D_p.xy / PSEUDO3D_p.z).xy - PSEUDO3D_o;
	    color = texture(txt, newUV + 0.5);
		color.a *= step(max(abs(newUV.x), abs(newUV.y)), 0.5);
}

//GREYSCALE
uniform bool  GREYSCALE_active  = true;
uniform vec3  GREYSCALE_TintColor : source_color = vec3(1.0);
uniform float GREYSCALE_Luminosity : hint_range(-1.0, 1.0) = 0.0;
uniform float GREYSCALE_Blend : hint_range(0.0, 1.0) = 1.0;
void greyscale(in vec2 uv, in sampler2D tex, vec2 size, vec2 pixelSize, inout vec4 color) {
	    // Calcula la luminosidad en blanco y negro
	    float luminance = 0.3 * color.r + 0.59 * color.g + 0.11 * color.b;
	    // Aplica el ajuste de luminosidad
	    luminance = clamp(luminance + GREYSCALE_Luminosity, 0.0, 1.0);
	    // Interpola entre el color original y el color en escala de grises
	    color.rgb = mix(color.rgb, vec3(luminance), GREYSCALE_Blend) * GREYSCALE_TintColor;
}


void fragment() {
	vec4 color = texture(TEXTURE, UV);
	vec2 size = vec2(textureSize(TEXTURE, 0));
	vec2 uv = UV;
	vec2 screen_uv = SCREEN_UV;

	if(PSEUDO3D_active) pseudo3d(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);
	if(GREYSCALE_active) greyscale(uv, TEXTURE, size, TEXTURE_PIXEL_SIZE, color);


	COLOR=color;
}

void vertex() {
	
	PSEUDO3D_p=vec3(1,1,1);
	PSEUDO3D_o=vec2(1,1);
	pseudo3d_vertex(UV,PSEUDO3D_p,PSEUDO3D_o,VERTEX,TEXTURE_PIXEL_SIZE);

}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_10shw"]
shader = SubResource("Shader_iq3bx")
shader_parameter/PSEUDO3D_active = true
shader_parameter/PSEUDO3D_fov = 35.743
shader_parameter/PSEUDO3D_y_rot = 7.70101
shader_parameter/PSEUDO3D_x_rot = 5.77501
shader_parameter/PSEUDO3D_inset = 0.064
shader_parameter/GREYSCALE_active = true
shader_parameter/GREYSCALE_TintColor = Color(1, 1, 1, 1)
shader_parameter/GREYSCALE_Luminosity = 0.0
shader_parameter/GREYSCALE_Blend = 1.0

[sub_resource type="SpriteFrames" id="SpriteFrames_oay1k"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("3_t3lb8")
}, {
"duration": 1.0,
"texture": ExtResource("2_e06wh")
}, {
"duration": 1.0,
"texture": ExtResource("3_2mmwv")
}, {
"duration": 1.0,
"texture": ExtResource("4_cc5mr")
}, {
"duration": 1.0,
"texture": ExtResource("5_y64ey")
}, {
"duration": 1.0,
"texture": ExtResource("6_vu1iv")
}, {
"duration": 1.0,
"texture": ExtResource("7_p2sjx")
}, {
"duration": 1.0,
"texture": ExtResource("8_8slbi")
}, {
"duration": 1.0,
"texture": ExtResource("9_ueai0")
}, {
"duration": 1.0,
"texture": ExtResource("10_temj0")
}, {
"duration": 1.0,
"texture": ExtResource("11_gwae1")
}, {
"duration": 1.0,
"texture": ExtResource("12_mn5fg")
}, {
"duration": 1.0,
"texture": ExtResource("13_5jmwu")
}, {
"duration": 1.0,
"texture": ExtResource("14_pvbc4")
}, {
"duration": 1.0,
"texture": ExtResource("15_vorph")
}, {
"duration": 1.0,
"texture": ExtResource("16_b7r4p")
}, {
"duration": 1.0,
"texture": ExtResource("17_h4rrq")
}, {
"duration": 1.0,
"texture": ExtResource("18_qsqos")
}, {
"duration": 1.0,
"texture": ExtResource("19_jqinh")
}, {
"duration": 1.0,
"texture": ExtResource("20_jykhe")
}],
"loop": true,
"name": &"default",
"speed": 25.0
}]

[node name="Demo" type="Node2D"]
position = Vector2(-62, 17)

[node name="ColorRect" type="ColorRect" parent="."]
offset_left = 35.0
offset_top = -41.0
offset_right = 1285.0
offset_bottom = 634.0
color = Color(0, 0, 0.0352941, 1)

[node name="Godot-text" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_st2lq")
position = Vector2(642, 528)
scale = Vector2(0.456332, 0.456332)
texture = ExtResource("21_0xoix")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
light_mask = 8193
material = SubResource("ShaderMaterial_10shw")
position = Vector2(638, 262)
scale = Vector2(0.387939, 0.383301)
sprite_frames = SubResource("SpriteFrames_oay1k")
autoplay = "default"
frame_progress = 0.525411
